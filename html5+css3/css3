css2

     关系选择器


css3  结构选择器
   nth-child()  获取第几个子元素
   nth-child(2n) ==》nth-child(even)
   nth-child(2n+1) ==》nth-child(odd)
   nth-of-type  在同种类型中，获取你第几个子元素
   first-child  第一个子元素
   first-of-type  同种类型中第一个子元素
   last-child  最后一个子元素
   last-of-child  同种类型中最后一个子元素
   only


   否定选择器（用来排除某些元素）
   ：not()

   input[type="text"]

   属性选择器

   E[attr=val]
   E[attr|=val]只能是val或者是val-开头的
   E[attr*=val]属性值中只要包含val即可
   E[attr~=val] 属性值有多个，其中有一个是val
   E[attr^=val]  以val开头
   E[attr$=val] 以val结尾


   目标伪类选择器
   #div1：target  匹配url中的目标元素
   :target  对所有的目标元素都起作用，当前目标元素是定位元素的时候才起作用

   伪元素在css3中用：  :：before  ::after  为了区分伪类和伪元素


   border-radius  设置的是外圆的半径
   内圆和外圆
        内圆的半径 = 外圆半径 - 边框值 小于的等于零则是直角


   线性渐变
   linear-gradient
   渐变方向：沿着直线轴的方向
   第一个参数设置渐变方向  45deg
   从第二个参数开始设置渐变颜色和位置（参数可以是百分比或者是固定的值）
   两种颜色之间的区域称为渐变过渡区
   去掉渐变过渡区只需要对颜色设置起始位置和结束位置

   重复线性渐变
   repeating-linear-gradient

    径向渐变
    radial-gradient
    从‘一个点’向多方向颜色渐变
    shape ellipse circle

    at 关键词可以设置圆心的位置 top center |10px 10px
    100px 50px at center 可以自己设置径向渐变的水平半径和垂直半径

    closet-corner  最近的角
    closest-side   最近的边
    farthest-corner  最远的角（默认值）
    farthest-side   最远的边

    重复的径向渐变
    repeating- radial-gradient

    background-origin  设置背景图从哪个区域开始显示
    padding-box  从内边距开始显示 （默认值）
    border-box  从边框区域开始显示
    content-box  从内容区域开始显示

    background-clip 从哪个区域往外裁剪
    padding-box 从padding区域外向外裁剪
    border-box  从边框区域向外裁剪
    content-box  从内容区域外的进行裁剪

    background-size 设置背景图的大小
    100%  100%
    10px 10px
    contain  按照原来的比例收缩，背景图显示完整，但是不一定铺满整个容器
    cover按照原来的比例收缩，背景图可能不完整，但是会铺满整个屏幕

box-shadow  默认外阴影，如果设置内阴影
第一个参数水平方向偏移  正—》右  负->左
第二个参数 垂直方向偏移 正 ->下  负 ->上
第三个个参数  模糊半径
第四个参数   扩展半径
第五个参数是颜色

单阴影
扩展半径 正->往外扩展 负->往内收缩

多层阴影

文本阴影


在css2中所有的属性都是即时的效果
在css3当中增加了动画属性，可以实现动画效果

1 transition 属性
    语法：当css属性值发生改变时，由起始值向结束值实现平滑的过度
    特点：只有两种状态，一个是起始值，一个是结束值
          动画的执行时需要被触发的，通过伪类，js或者是媒体查询等触发动画执行的
          （css属性发生改变时，transition属性才会被触发）


transition细分属性
    1 transition-property  过度属性
    2 transition-duration   动画执行的时间
    3 transition-timing-function  动画运行的速度  ease（默认值，减速） ease-in 加速  ease-out 减速  linear 匀速  ease-in-out  先加速后减速
    4 cubic-bezier  贝赛尔曲线
    5 transition-delay  延迟时间

    简写写法
    transition：width 1s linear 1s
    如果只有属性不一样，那么后面的执行时间，运行速度，延迟时间都一样
    transition：all 1s linear 1s;all可以省略
    transition：1s   1s指执行时间


&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&

transform 变形属性
rotate(45deg) 旋转 正->顺时针旋转  负->逆时针旋转
skew(x,y) 倾斜  x:正->水平往左倾斜  x:负：->水平往右倾斜  y: 正->水平向右
scale（tx,sy）  缩放  默认值是1 <1缩小 >1就是放大
translate(tx,ty) 平移 水平方西：正向 右   负向左  垂直方向  正向下  负向上

变型的基准点

transform-origin     left,top,right,bottom || 10px 10px
rotate,skew,scale可以改变  ，translate不能改变

四个方法结合在一起写的话，如果translate写在第一个位置上就会改变其他变形方法的基准点

animation帧动画
弥补了过渡动画的缺陷
例如：可以设置任一状态，不需要触发条件，是立马执行

帧动画分为两步
1 通过keyframes (设置动画的运动曲线)
2 通过aniamtion调用声明的关键帧

@keyframes move{
    0%{   百分比可以理解为在一定的时间内，设置某个时间点的样式

    }
    25%{

    }
    75%{

    }
}

animation 细分属性
animation-name 关键帧动画的名称  (必写)
animation-duration 动画运行的时间   （必写）
animation-timing-function 动画运行的速度 ease（默认值）
animation-delay 延迟时间
animation-iteration-count  执行的次数 1 ｜ infinite（ 无线循环次）
animation-direction 执行的方向 normal|reverse(反方向)|alternate(交替)|reverse-alternate(反方向交替)
animation-play-state 动画的状态 running 运行（默认值 ）|paused 停止
animation-fill-mode 动画结束的状态 none（默认值）|backwards(起始状态)|forwards(最后一帧的状态)|both(根据方向的设置)

animation简写写法
animation:move 1s  linear 1s 1 reverse both
animation:move 1s 1 both;  有默认值的则不用在设置相同的值了


3D变化
transform-style:flat|preserve-3d(3D空间展示)作用在变形元素的父标签
perspective:2000px 景深（800px~2000px）近大远小的效果 设置祖先标签（包含父标签）用户到z轴平面的距离
transform:perspective(800px)  直接作用在变形元素上的，有很多变形元素时，所有的效果都一致
perspective-origin  默认值是center
rotateX 围着X轴翻转  前后翻转 正->前翻  负 ->后翻
rotateY 围着y轴翻转
rotateZ(0deg) 效果
rotate3d(rx,ry,tz,a) rx,ry,rz向量坐标 a角度

scaleZ（0.5）单独使用不起作用，必须使用其他的变形方法配合使用


变量
1 储存公共的值@value；
2 作为属性，字符串（储存公共的url地址），选择器等 @value


Mixin 混合

其实值的就是将其他选择器的内容拿过来用

1
.public(){

}
#div1{
    public;
}

2   公用public里面的代码
.public{

}
#div1{
    &:extend(.public);
}

3
.public{

}
#div1：extend(.public){

}


