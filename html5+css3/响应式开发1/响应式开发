1 响应式开发的由来
    自适应网页设计的理念，自动识别屏幕的宽度并作出响应调整的网页设计
    说白了就是指制作一套页面，利用设备的特性（列如：屏幕的宽度，设备像素比等）
    利用调整的页面的布局，从而在各个设备上都能够显示出一个最佳的视觉效果
2 响应式开发的种类
     -pc端和移动端共用一套页面，适合小型的站点或者专题页
     -pc端和移动端各做一套，移动端的响应式开发成为移动适配
3 响应式开发的四大规则
    1 设置viewport(视口)
        早期pc页面在移动端设备上是按照980宽度渲染的，去看页面时，还是需要左右移动来查看，遮掩那个飞信号厂不方便，因此干脆让页面缩放到哥哥移动端设备的宽度，缩放值 = 设备宽度/980
        缺陷：
        页面缩小后，变得二非常小，所以非常的模糊
        自己来设置视口
        改变布局视口，让布局的视口等于我们设备的宽度，达到一个理想装态

    <meta name="viewport"
              content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"/>

    width:布局视口
        device-width :移动端的视口宽度
        user-scalable：是否允许用户缩放 yes是允许  NO是禁止
        initial-scale：初始缩放值
        maximum-scale：最大缩放值
        minimum-scale:最小缩放值

2 页面布局不能使用绝对宽度
    其实是对度量单位的选择，px是（固定单位） %（相对单位，相当于父标签）
    em（相对单位，相对于父标签字体的大小）
    rem（相对单位，相对于根元素字体大小）


3 引入媒体查询（@media)
    概念：在不同的条件下设置不同的样式，从而是页面达到不同的渲染效果
    不同的条件：根据设备特性设置不同的条件
    @media screen and (max-width:1000px){
        css样式
    }
    type：媒体类型 主要可以设置  all（所有的设备） screen显示器 print打印机
    width(显示区域的宽度)和device-width(设备宽度)区别
    不是手机是横向还是纵向，设备宽度不会发生改变，显示区域宽度会发生改变
    device-pixel-ratio设备像素比
    物理像素：各个设备显示器的最小的物理显示单元， 各个设备自身的单位
    设备独立像素 虚拟像素（CSS像素），通过相关系统转化为物理像素，所以物理像素和设备独立像素之间存在着一定的关系  设备像素比（dpr)

    设备像素比 = 物理像素比 / CSS像素  （在X轴方向或者Y轴方向）
    dpr >= 高清屏幕
    dpr < 普通屏幕
    处理图片
    dpr = 1 切一倍的图 在375宽度的设计稿把这张图片切下来
    dpr= 2 切二倍的图 在750高度的设计稿把这张图切下来
    dpr= 3 切三倍的图 在1125高度的设计稿把这张图切下来
    目前公司只给750设计稿，只需要切一次就好了

    PC端和移动端是一套的的话：我们可以通过MAX-WIDTH来控制图片的大小
    列如：max-width:50%;图片的大小大于50%，则图片的宽度变成50%，如果小于50%；则显示成图片自身的高度


    CSS预处理器 - LISS
    less自带一套语法及解析器，通过解析器可以将less代码解析成CSS代码
    less解析

    客户端或者服务端解析
    客户端一般用于开发环境下