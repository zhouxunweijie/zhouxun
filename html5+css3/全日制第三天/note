1.响应式开发的由来
    自适应网页设计的理念：自动识别屏幕的宽度并作出相应调整的网页设计
    说白了，指制作一套页面，利用设备的特性（例如:屏幕的宽度，设备像素比等）自动调整的页面的布局，从而在各个设备上都能显示成一个最佳的视觉效果
2.响应式开发的种类
 - PC端和移动端共用一套页面，适合小型站点或者专题页等
 - PC端和移动端各做一套，移动端响应式开发称为移动适配
3.响应式开发的四大规则
  1.设置viewport(视口)
  早期PC端页面在移动设备上是按照980宽度渲染，去看页面时，还是需要左右移动来查看，这样就非常不方便，因此干脆让页面缩放到各个移动设备的宽度，缩放值 = 设备宽度/980
  缺陷：
    页面缩小后，变的非常小，并且非常模糊
  自己来设置视口（viewport）
    改变布局视口，让布局视口的宽度等于设备的宽度，达到一个理想状态
    <meta name="viewport" content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0"/>
  2.页面布局不能使用绝对宽度
    其实是对度量单位的选择，
    px（固定单位） 百分比(相对单位，相对于父标签)
    em(相对单位，相对于父标签字体大小) rem(相对单位，相对于根元素字体小)
  3.引入媒体查询（media）
    概念：在不同条件下设置不同的样式，从而使页面达到不同的渲染效果
    不同条件：根据设备特性设置不同的条件
    @media  screen and (max-width:1000px){
        css样式
    }
    type:媒体类型 主要可以设置 all (所有的设备) screen显示器 print 打印机
    width(显示区域宽度)和device-width(设备宽度)区别
    不管手机是横向还是纵向，设备宽度不会发生改变，显示区域宽度是发生改变

    device-pixel-ratio设备像素比
    物理像素：各个设备显示器最小的物理显示单元 各个设备自身的单位
    设备独立像素 虚拟像素（CSS像素）,通过相关系统转化成物理像素，所以物理像素和设备独立像素之间存在着一定的关系  设备像素比（dpr）

    设备像素比 = 物理像素/css像素 （在x轴方向或者y轴方向上）
    dpr>=2 高清屏幕
    dpr<2 普通屏幕
    处理图片
    dpr =1  切1倍图  在375宽度的设计稿把这张图片切下来
    dpr =2  切2倍图  在750宽度的设计稿把这张图片切下来
    dpr =3  切3倍图  在1125宽度的设计稿把这张图片切下来
    目前公司里一般只给你750设计稿，只需要切一次就行

    PC端和移动端页面一套，我们可以通过max-width来控制图片的大小
    例如:max-width:50%;图片的大小大于50%，则图片的宽度变成50%，如果小于50%，则显示成图片自身的宽度

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   css预处理器-LESS
    less自带一套语法及解析器，通过解析器可以将less代码解析成CSS代码
    less解析
    客户端或者服务端解析
    客户端一般用于开发环境下

    变量
    1.存储公共的值@value
    2.作为属性，字符串（存储公共url地址），选择器等 @{value}
        @fontSize:20px;
        @color:color;
        @url:"../image";
        @box:box;
        #div1{
          font-size: @fontSize;
          background-@{color}:red;
          @{color}:green;
          background-image:url("@{url}/a.jpg");

        }
        .@{box}{
          background: pink;
        }

    Mixin混合
      其实指的就是将其他选择器里的内容拿过来用





