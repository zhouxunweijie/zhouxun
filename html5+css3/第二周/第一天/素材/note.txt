论程序员的基本素养
  ——>写页面之前，首先在head标签中增加几个标签


  SEO推广优化，我们在页面当中设置一些关键词（head中的keywords和body中的内容），百度或者 谷歌等搜索引擎会定期派出他们的爬虫来我们的网站上进行检索，把一些关键字和内容收录到百度等搜索引擎的数据库中，当用户使用百度或者谷歌搜索内容的时候，会输入一些内容，百度等公司会到自己的数据库中把所有和输入的关键词匹配的网站提前展示

  SEM:百度竞价：我们可以设定一些关键词（可能跟我们没关心），谁给百度的钱多，谁的就靠前


  ->设置网页的图标



一个页面中的H1只能够出现一次，而且他的去那种非常的高，早这里写的文字非常爱抓取，
所以我们设置了背景图，背景图已经存在了需要展示的文字，但是我们还是会加一点文字，目的是给百度的小蜘蛛看的

less叫做css预处理器：安=按照我们less的语法（和js类似是面向对象编程的，在less中存在变量。函数，继承，作用域，）

在产品上线的时候，我们直接使用NODE 或者编译工具


4 menu区域的hash值

当点击每一个选项的时候，除了控制右侧的内容跟着改变，而且还在当期页面的url地址栏中增加对应的hash值
以后当页面刷新或者重新的加载的时候，我们首先获取url中的hash值，然后判断哪一个默认的选中

data-id="10000"  每一场赛事都有一个对应的赛事类型ID（不冲突），主要是控制右侧的内容跟着改变的

5 实现三角剪头的方式

-> 切图：由于需要加载图片，所以相对来说会耗性能，尤其是移动端开发，我们是能不用图片的绝对不用

->&lt 和 &gt; 大于号和小于号实现
  弊端：不好操作大小，而且如果需要调节角度的话，我们需要使用特殊的字体，这样导致很多的浏览器不支持这个字体就识别不了相应的样式

->把一个只有两个边框的盒子进行旋转
  弊端： 不兼容，只在移动端使用

-> 我们只做两个三角形，然后两个三角形进行叠加，一个有颜色，一个没颜色，没颜色的覆盖有颜色的

6 使用iscroll实现局部滚动
原理类似于轮播图，他首先通过第一参数获取到需要局部滚动的区域，然后再 获取到这个区域中的第一个子元素，他认为这个元素就是我们即将实现滚动的元素 =>在项目中，我们需要把所有需要滚动的内容都放在当前区域的子元素中

找到需要滚动的元素，在用户操作的时候（鼠标滚动，拖动），我们控制这个元素在menu这个区域中来回的运动（上下的是top值   左右：控制的是left值  在最新的版本中，第五版本，控制的是transform值）  ==.>这样的话首先就必须要保证menu区域必须要有固定的宽高的
，里面的内容宽高是大于menu区域的，这样才能够左右或者上下的滚动他

默认是不显示滚动条的，但是我们需要显示的话，我们需要配置scrolldars

isSCROLL有好多的版本
      5版本是不兼容IE低版本浏览器，一般用于移动端开发
      pc端用的一般都是第一和第二版本（兼容的），但是这两个版本的配置参数的名字和第五版本有几个不太一样，
      开发者版本，相对于其他版本提供了更强大的内容，可以实现下拉加载和上拉刷新的效果，


7 jQuery

->通过JQ选择器获取的结果都是JQ的实例，也是类数组的集合
$lilnks[0]
$links.get[0]:前面两个都是获取类数组集合中索引为0的这一项，返回的结果是一个DOM原声的对象
$links.eq(0):虽然也是获取第一个，但是获取的结果依然是JQ对象















//.main-content{
//  width: unit(@content-w,px);
//  height:100%;
//  margin: 20px auto;
//  overflow: hidden;
//  nav{
//    position: relative;
//    width: 200px;
//    height: 100%;
//    min-height: 100%;
//    float: left;
//    overflow-y: auto;
//    background-color: @back-color;
//    .list2{
//      position: absolute;
//      top:0;
//      left: 0;
//      width: 100%;
//      border:1px solid #eee;
//      li{
//        width: 200px;
//        height: 50px;
//        a{
//          width: 171px;
//          height: 50px;
//          line-height: 50px;
//          border-left:5px solid transparent;
//          display: block;
//          padding-left:24px;
//          font-size: 16px;
//          color: #444444;
//          position: relative;
//          i{
//            position: absolute;
//            top:21px;
//            right: 38px;
//            width: 4px;
//            height: 4px;
//            border:2px solid;
//            border-color:#346AFF #346AFF transparent transparent;
//            display: none;
//            transform:rotate(45deg) ;
//
//          }
//          &:hover{
//            background-color:#eff3ff ;
//            border-left-color: #346AFF;
//            color: #3374e0;
//        }
//          &:hover i{
//            display: block;
//          }
//        }
//      }
//
//    }
//  }
//}