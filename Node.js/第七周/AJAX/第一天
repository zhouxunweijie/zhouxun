URL
名称：统一资源定位符
作用：标志某一个资源在整个互联网上的唯一位置

URI：统一资源标识符
URN：统一资源名称

URI是URL和URN的超集

URL请求参数的VALUE里不能存在URL组件，如果必须使用那么一定要使用以下格式化；
相同点：都可以把非英文字符格式化给 URL字符串 格式
不同点：
encodeURL(中文变量)//只分解不是英文字符
encodeURLcomponent(中文变量)//英文符号也会分解，英文不会

url的组成结构
<方案>://<用户名>:<密码>@<域名>:<端口>/<路径>?<请求参数>#<锚点>


方案:如果在浏览器不输入方案进行url请求时，那么浏览器会设置一个默认的方案 ->http
端口：如果早浏览器请求url是不出人端口，那么浏览器会根据方案自定义设置一个默认端口

请求参数：请求参数的格式是固定的
url中不能存在非英文字符

https = http + ssl/tls(是一种加密方式，使用公私密钥的方式来实现的，基于非对称加密算法中的RSA算法来实现)

DNS解析
域名名称服务
把域名解析为一个IP地址

网路七层协议
1、 物理层 网卡
2、 数据链路层 网卡驱动
3、 网络层 ip
4、 传输层 TCP（传输控制协议） /IP  udp
5、 会话层 断开会话/保持回话
6、 表示层 加密解密
7、 http https ftp mailto telnet smtp

网页从访问到现实的过程：
1 DNS解析
2 根据ip和端口链接服务器
3 发送请求报文
4 等待服务器响应
5 接受服务器相应
6 断开连接
7 显示数据

http
超文本传输协议

作用：负责链接并传输HTTP客户端和HTTP服务器之间的数据

http有两部分组成"请求"(发送给服务器)和“响应”（返回给客户端），
注意：必须先有请求后有响应并且一个请求对应一个响应。

事务：事务由n+1个事件组成，只有当包含所有事件都完成时，该事物才算是成功，否则失败。
http协议是一个事务 ：它包含两个事件‘请求’和‘响应’，当‘请求’和‘响应’都完成时，该HTTP交互才算完成，否则失败。并且每一个HTTP事务只能使用一次不可复用，第二次http交互必须是一个新的事务

当HTTP客户端接收到服务器返回的响应报文完成时，http事务才算是完成

http请求和响应的数据内容叫做‘报文’。

http请求的数据格式

http请求报文的第一行也就是第一部分叫做‘起始行’。
1、 请求起始行：请求的基本信息
http请求方式、请求地址、http版本号
2、 请求首部 ：请求的附属信息
cookie:保持网站登录状态
document.cookie(获取当前浏览器的cookie)

UserAgent:自动匹配客户端

三 请求主体 ：存放发送给服务器的数据
文件上传

http响应
 1、响应起始行
    http版本号（必须和请求起始行中版本号的一样）、服务状态码、状态码描述符
 2、 响应首部
    date：服务器时间
    content-length:获取资源的大小
 3。 响应主体
    存放http服务器发送给http客户端的数据


http request method:
表示当前http请求使用什么方式去发送数据。

GET :从服务器获取资源
POST ：网服务器发送资源
DELETE ：通知服务器删除某个资源
DEAD :http响应报文只需要包含起始行和首部，不需要返回主体
PUT网服务器发送资源

get方法：
html中所有通过href src 属性以及地址栏访问的资源，全都是get方法请求。
1 get方法没有请求主体，因为get方法的目的是获取服务器资源，而请求主体是用来存放发送给服务器的数据，所以get方法不需要请求主体，
2 没有大小限制
 因为get方法没有请求主体，所以发送的参数只能是先格式化为querystring(请求参数)的格式，然后拼接到url后面但是浏览对url的长度有大小限制，所以造成了get方法有大小限制（IE 2K ），一般 URL的长度最长为2K。
 3 可以被浏览器缓存、
 4 明文发送数据

post方法
1 有请求主体
2 没有大小限制
因为post方法会把数据 存在请求主体中，而请求主体是没有大小限制的
3 永远不会被浏览器缓存
4 不是明文发送

delete方法
和get方法特点一模一样，唯一不一样的是该方法的响应状态码为202

head方法
和get方法特点一模一样，唯一不一样的是该方法的不会反回相应主体，只是返回响应起始行和响应首部，也就是说给方法既没有请求主体也没有响应主体

put方法
和post方法特点一模一样，但是有两点不同
1 给方法的响应状态码为202，
2 是给方法没有幂等性（必须服务器实现之后，才可用），而post没有


http状态码：
标示服务器该请求的接口
状态码有三个数字组成，一共分为五类
1xx  http正在初始化
101 切换协议

2xx http客户端请求成功
200 ok 服务器处理成功
202 服务器接受该请求

3xx  重定向和缓存
301 永久移动
302 临时移动
301和302的作用是相同的。都是服务器用来请求重定向到指定的网站和页面
注意事项：服务器返回301或者302之后，必须在相应首部中设置一个LOCATION首部，他是用来告诉浏览器重定向的地址
区别：301标示原网址永久转移到新的网站，意味着老的域名已经不再使用，所以会降低搜索引擎的权重，而302不会存在这种情况

304 资源未改变，缓存静态资源时使用
304是通过2个响应首部和2个请求首部来实现的，
响应首部 ：last-modified(标示请求资源的资源在服务器最后一次修改的时间，格式为GMT)、etag（标示请求的资源在服务器上最后一次的实体标签0）
请求首部：last-modified-since、（和last-modified对应）

前端浏览器缓存的方式：
1 强缓存（通过两个响应首部来实现的）
expire:静态资源 的缓存过期时间，单位为秒
cache-control:静态资源缓存存多少秒，相当于浏览器时间，
注意事项：在缓存没有过期之前，浏览器不会去服务器请求新的资源

304缓存
涉及到4个首部，和强缓存不同的是每次浏览器在访问静态资源都会先去浏览器效验该资源是否已过期


4xx http客户端请求失败
400 错误的请求，出现的请求有以下几种
 1 url中缺少参数
 2 url方案错误
 3 url方法错误
 4 url的长度超过服务器限制
 5 请求的端口错误

 401 未认证
 403 禁止访问
 404 该资源未找到

 5xx http服务器错误


 MIME Type:
 所用途因特网邮件扩展
 作用：标示数据的类型

 在http协议中，通过通用首部Content -type (请求和响应都存在)来表示MIME type

 html  text/html
 css  text/css
 js  text/javascript application/x-javascript
 jpg  image/jpeg
 png  image/png
 gif image/gif


 格式是固定的：父类型/子类型
 注意事项：当发送或者响应的内容为文本格式时，可以通过context-type来执行内容的编码格式

 因为content-type是通用首部，所以在请求和相应都存在
 请求首部中的context-type是告诉服务器，浏览器发送的内容格式
 响应首部中的context-type是告诉浏览器，服务器发送的内容格式

 表单提交有一个特殊的
 content-type：application/x-www-form-urlencoded;charset = utf-8

http 1.1和2.0的区别：
1 多路复用
2 首部压缩
3 服务器推送
4 报文使用二进制数据帧实现，不再使用字符串，


ajax
异步javascript和xml

作用：让浏览器可以异步的进行HTTP(S)的请求

实现方式
利用浏览器提供的API（应用程序编辑接口），进行异步http请求

处理兼容性的方式有两种：
1 优雅降级  优先保证高级浏览器
2 渐进增加  先保证低版本浏览器可以使用

高级浏览器
XMLHttprequest
低版本IE
ActiveXO


ajax({
    //ajax的请求地址
    url:'',
    //
})

跨域
 什么是域：
 域就是URL中方案、域名以及端口组合在一起，就叫做域
 通过location.origin可以获取当前页面的域

 同域请求
 请求的url中方案，域名，端口这三部分都和宿主页面的方案、域名、端口相同、那么这个请求就叫做同域请求

 跨域请求
 请求的URL中方案、域名。端口这三部分和宿主页面的方案、域名、端口不相同、那么这个请求就叫做跨域请求

 同域策略
 同域策略是浏览器厂商强制添加一种安全限制，它限制了javascript在跨域时无法进行某些操作

 列如无法进行ajax、无获取跨域iframe里的内容

 竟然有同源策略的存在，那么如果成功便携发起跨域请求
 答：饶过同源策略即可。
 因为同域策略主要限制了JAVASCRIPT,时候可以不通过javascript进行跨域访问？通过html标签内=进行跨域访问。

 有哪些标签可以进行跨域资源访问？
 1 img
 会把加载过来的图片强制转化为图片限制，如果内容不是合法的图片，则显示裂图
 缺点：虽然img可以加载跨域资源，但是由于他本身的特性，无法获取跨域资源的内容；
 2 script
 可以成功加载跨域资源，并且会把跨域资源当成javascript去执行

 3 iframe(iframe可与成功)
 ifram1e可以成功加载跨域信息，但无法通过javascript获取内容的资源

如何解决变量被覆盖的的问题？
由浏览器和服务器格式命名改为游浏览器统一命名
2 浏览器在前端定义好变量名通过querystring传递给服务器
3 server提前定义好用来传递变量名的那个键值对，例子中的key
4 server通过定义好的键值对来获取前端传过来的变量名
5 server拼接变量名，并返回给浏览器

script加载完成






